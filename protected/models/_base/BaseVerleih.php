<?php

/**
 * This is the model base class for the table "verleih".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Verleih".
 *
 * Columns in table "verleih" available as properties of the model,
 * followed by relations of table "verleih" available as properties of the model.
 *
 * @property integer $id
 * @property integer $artikel_id
 * @property string $verleih
 * @property string $rueckgabe
 * @property string $bemerkung
 *
 * @property Artikel $artikel
 */
abstract class BaseVerleih extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'verleih';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Verleih|Verleihs', $n);
	}

	public static function representingColumn() {
		return 'verleih';
	}

	public function rules() {
		return array(
			array('artikel_id, verleih', 'required'),
			array('artikel_id', 'numerical', 'integerOnly'=>true),
			array('rueckgabe, bemerkung', 'safe'),
			array('rueckgabe, bemerkung', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, artikel_id, verleih, rueckgabe, bemerkung', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'artikel' => array(self::BELONGS_TO, 'Artikel', 'artikel_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'artikel_id' => null,
			'verleih' => Yii::t('app', 'Verleih'),
			'rueckgabe' => Yii::t('app', 'Rueckgabe'),
			'bemerkung' => Yii::t('app', 'Bemerkung'),
			'artikel' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('artikel_id', $this->artikel_id);
		$criteria->compare('verleih', $this->verleih, true);
		$criteria->compare('rueckgabe', $this->rueckgabe, true);
		$criteria->compare('bemerkung', $this->bemerkung, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}